#!/bin/sh

# Source PX4 alias commands (px4-alias.sh should be in the PATH)
. px4-alias.sh

# Required by QGroundCountrol
param set-default COM_FLTMODE1 -1
param set-default COM_FLTMODE2 -1
param set-default COM_FLTMODE3 -1
param set-default COM_FLTMODE4 -1
param set-default COM_FLTMODE5 -1
param set-default COM_FLTMODE6 -1

# Select and import parameters from the specified BSON file
param select parameters.bson
param import

# Disable the power supply check
param set CBRK_SUPPLY_CHK 894281

# Set the default battery voltage divider ratio
param set-default BAT1_V_DIV 5.7

# Disable automatic configuration to retain the current settings
param set SYS_AUTOCONFIG 0

# Set the vehicle type to multicopter
param set MAV_TYPE 2

# Set the autostart configuration profile
#param set SYS_AUTOSTART 4001
param set SYS_AUTOSTART 4017 # NXP drone hover games
#param set SYS_AUTOSTART 4014 # Generic S500

if param greater SYS_AUTOCONFIG 0; then
	param reset_all SYS_AUTOSTART RC* CAL_* COM_FLTMODE* LND_FLIGHT* TC_* COM_FLIGHT*
fi

# Camera
param set TRIG_INTERFACE 3     # Use MAVLink interface for triggering
param set TRIG_INTERVAL 1000   # Interval in milliseconds for time-based triggering
param set TRIG_MODE 1     # Trigger time based, on command

#tone_alarm start
#if param compare -s SYS_DM_BACKEND 1; then
#	dataman start -r
#else
#	if param compare SYS_DM_BACKEND 0; then
#		# Start data management service for mission and geofence data
#		dataman start
#	fi
#fi
# Start data management service for mission and geofence data
dataman start
send_event start

# Start CPU load monitoring service
load_mon start

# Start battery status monitoring service
battery_status start

# Start internal IMU sensor, fallback to alternative if needed
if ! icm42688p start -q -s -R 4; then
	# Fallback to ICM42605 if ICM42688P fails
	icm42605 start -s -R 4
fi

# Start internal magnetometer sensor, fallback to alternative if needed
if ! ist8310 start -q -I -a 15 -R 4; then
	# Fallback to QMC5883L if IST8310 fails
	qmc5883l start -I -R 6
fi

# Start barometric pressure sensor
ms5611 start -I

# Start ADC (Analog-to-Digital Converter)
ads1115 start -I

# Start PWM output driver and control allocator
pca9685_pwm_out start
control_allocator start

# Start external GPS module with specified settings
gps start -d /dev/ttySC0 -i uart -p ubx

# Initialize RC (Remote Control) input on specified device
rc_input start -d /dev/ttyAMA0

# Start RC update process
rc_update start

# Start sensor data processing service
sensors start

# Start the main state machine of the flight controller
commander start

# nxp_fmuk66-e_default/tcs
#dshot start
#pwm_out start

# Start high-level navigation tasks
navigator start

# Start Extended Kalman Filter for state estimation
ekf2 start

# Start landing detection service for multicopters
land_detector start multicopter

# Start hover thrust estimator for multicopters
mc_hover_thrust_estimator start

# Start flight mode manager
flight_mode_manager start

# Start position control for multicopters
mc_pos_control start

# Start attitude control for multicopters
mc_att_control start

# Start rate control for multicopters
mc_rate_control start

# Start Mavlink communication on UDP port 14556
# [-x]        Enable FTP
# [-r <val>]  Maximum sending data rate in B/s (if 0, use baudrate / 20)
#            default: 0
#[-p]        Enable Broadcast
#[-u <val>]  Select UDP Network Port (local)
#            default: 14556
mavlink start -x -u 14556 -r 1000000 -p

# Start Mavlink communication on specified serial device for Telemetry
# [-Z]        Force hardware flow control always off
# [-x]        Enable FTP
# [-d <val>]  Select Serial Device
#                 values: <file:dev>, default: /dev/ttyS1
mavlink start -x -Z -d /dev/ttySC1
#mavlink start -x -d /dev/ttySC1

# Start logging service with a buffer size of 200
logger start -t -b 200

# Send boot complete signal via Mavlink
mavlink boot_complete
